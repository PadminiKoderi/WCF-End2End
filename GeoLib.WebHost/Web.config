<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <system.web>
    <compilation debug="true" targetFramework="4.5.1" />
    <httpRuntime targetFramework="4.5.1" />
  </system.web>
  <connectionStrings>
    <add name="OracleConn" connectionString="User ID=OMAR;Password=omardevzx;Data Source=DEV20.WORLD;Persist Security Info=True;" providerName="System.Data.OracleClient"/>
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <system.serviceModel>
    <services>
      <!--for each service, there has to be a one to one mapping-->
      <service name="GeoLib.Services.GeoManager">
        <!--end point has address - url, binding - type of mode , contract - service contract that has to be exposed-->
        <!--contract has ot be fully qualified service name-->
        <!--address can be a port that is not used along with some name. binding and address protocol should match-->
        <!--this is web hosting so we have to use servicemodel activation-->
        <endpoint address=""
                  binding="wsHttpBinding"
                  contract="GeoLib.Contracts.IGeoService">        </endpoint>
      </service>
    </services>
    <!--service activation can be done via a virtual svc file rather than a physical one-->
    <!--this virtual svc file is supported by .net 4 + onwards-->
    <serviceHostingEnvironment>
      <serviceActivations>
        <!--if it is a physical file then the below svc file will be existing-->
        <!--here it is virtual. still client will address it with the url in the properties->web->servers -> project url appending the below name-->
        <!--http://localhost:1672/GeoService.svc-->
        <!--If an address was given above then the url will be http://localhost:1672/GeoService.svc/<address> -->
        <!--<add service="GeoLib.Services.GeoManager" relativeAddress="GeoService.svc"/>-->
        
        <!--factory is for promatically injecting the end points-->
        <add service="GeoLib.Services.GeoManager" relativeAddress="GeoService.svc" factory="GeoLib.WebHost.CustomHostFactory"/>
      </serviceActivations>
    </serviceHostingEnvironment>
  </system.serviceModel>
</configuration>