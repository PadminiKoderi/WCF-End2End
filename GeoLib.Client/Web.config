<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <system.web>
    <compilation debug="true" targetFramework="4.5.1" />
    <httpRuntime targetFramework="4.5.1" />
  </system.web>
  <system.serviceModel>
    <client>
      <!--When using multiple endpoints, WCF tries to give name using the service contract name-->
      <!--here since the service contract name is same, we have to give a unique name-->
      <endpoint address="net.tcp://localhost:8009/GeoService"
                  binding="netTcpBinding"
                  contract="GeoLib.Contracts.IGeoService"
                name="tcpEP"
                bindingConfiguration="TCP1">
      </endpoint>
      <!--To listen to http ports , we need admin access-->
      <!--<endpoint address="http://localhost/GeoService"
                  binding="basicHttpBinding"
                  contract="GeoLib.Contracts.IGeoService"
                  name="httpEP">     
        
      </endpoint>-->
      <endpoint address="http://localhost:1672/GeoService.svc/"
                binding="wsHttpBinding"
                contract="GeoLib.Contracts.IGeoService"
                name="webEP">

      </endpoint>
      <!--This is for contract equivalence-->

      <!--contract="GeoLib.WindowsHost.Contracts.IMessageService" this shul be the actual contract since the service has this
                  but contract equivalence we can have different contracts for service n client. so add the client namespace here -->

      <endpoint address="net.tcp://localhost:8010/MessageService"
                  binding="netTcpBinding"
                  contract="GeoLib.Client.Contracts.IMessageService"
                  name="messageEP"
                >
      </endpoint>
      </client>
    <!--for each binding there is a separate set-->
    <!--If a name is not mentioned here, then it is applicable to all the bindings of tat type-->
    <!--In case of reliable binding like TCP, two things have to be set - receive time out and inactivity time out. They both work together-->
    <!--receieve timeout is a sliding time out.-->
    <bindings>
      <netTcpBinding>
        <binding name="TCP1" sendTimeout="00:20:00" maxReceivedMessageSize="2000000" receiveTimeout="00:20:00" transactionFlow="true">
          <reliableSession inactivityTimeout="00:20:00" ordered="true"/>
        </binding>
      </netTcpBinding>
    </bindings>
  </system.serviceModel>
</configuration>